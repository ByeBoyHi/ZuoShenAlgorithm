package Chapter6_Hard.Q;

public class Q4_WinCoins {
    /*
        谁把最后的铜板拿了，谁赢。
        给定一个非负数组，每一个值代表当前位置有多少个铜板，每个人只能在一个位置上拿任意多个铜板，不能不拿。
        返回获胜者名字。
        a 先手，b 后手。
     */
    // NIM博弈论。
    // 把数组所有数字异或起来，最终结果如果非零，先手赢；否则，后手赢。
    /*
        解释：
            异或：不进位相加。
            假设推到最后，只有两个格子里面有coin了，且这两个格子的数量异或和为零。
            必然是两个格子的数量是一样的。
            另一个人不管怎么拿，都无法做到再次让异或和为零。
            这时候不断的拿下去，我就可以让最终剩下的两个格子都只剩一个coin。
            那么此时另一个人拿了其中一个，我再拿另一个，我就赢了
     */
    public int NIM(int[] arr) {
        // 0异或任何数字都是他自己
        int ans = 0;
        for (int cur : arr) {
            ans ^= cur;
        }
        // 1 表示先手赢
        // 0 表示后手赢
        return ans == 0 ? 1 : 0;
    }
}
